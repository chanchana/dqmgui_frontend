{"version":3,"file":"static/webpack/static/development/pages/index.js.2b3d2b194ec7f458a370.hot-update.js","sources":["webpack:///./components/plots/zoomedPlots/zoomedPlots/zoomedJSROOTPlot.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { useRouter } from 'next/router';\n\nimport { get_jroot_plot } from '../../../../config/config';\nimport {\n  ParamsForApiProps,\n  PlotDataProps,\n  QueryProps,\n} from '../../../../containers/display/interfaces';\nimport { useRequest } from '../../../../hooks/useRequest';\nimport {\n  StyledCol,\n  StyledPlotRow,\n  PlotNameCol,\n  MinusIcon,\n  Column,\n  ImageDiv,\n} from '../../../../containers/display/styledComponents';\nimport { removePlotFromRightSide } from '../../plot/singlePlot/utils';\nimport { Button } from 'antd';\n\ninterface ZoomedJSROOTPlotsProps {\n  selected_plot: PlotDataProps;\n  params_for_api: ParamsForApiProps;\n}\n\nexport const ZoomedJSROOTPlot = ({\n  selected_plot,\n  params_for_api,\n}: ZoomedJSROOTPlotsProps) => {\n  const router = useRouter();\n  const query: QueryProps = router.query;\n\n  const { data } = useRequest(get_jroot_plot(params_for_api), {}, [\n    selected_plot.name,\n  ]);\n  const Image = <ImageDiv\n    id={`${selected_plot.name}${query.run_number}${query.lumi}`}\n    width={params_for_api.width}\n    height={params_for_api.height}\n  />\n\n  useEffect(() => {\n    //@ts-ignore\n    ReactDOM.render(Image, document.getElementById(selected_plot.name));\n    //@ts-ignore\n    JSROOT.redraw(`${selected_plot.name}${query.run_number}${query.lumi}`, JSROOT.parse(JSON.stringify(data)), 'hist');\n  }, [data, params_for_api]);\n\n  return (\n    <StyledCol space={2}>\n      <StyledPlotRow\n        minheight={params_for_api.height}\n        width={params_for_api.width}\n        is_plot_selected={true.toString()}\n        nopointer={true.toString()}\n        id={selected_plot.name}\n      >\n        <PlotNameCol>{selected_plot.name}</PlotNameCol>\n        <Column>\n          <Button\n            type=\"link\"\n            onClick={() => removePlotFromRightSide(query, selected_plot)}\n            icon={<MinusIcon />}\n          />\n        </Column>\n      </StyledPlotRow>\n    </StyledCol>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAMA;AACA;AAQA;AACA;AAOA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}