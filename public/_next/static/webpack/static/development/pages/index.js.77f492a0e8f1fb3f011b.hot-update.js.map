{"version":3,"file":"static/webpack/static/development/pages/index.js.77f492a0e8f1fb3f011b.hot-update.js","sources":["webpack:///./components/plots/plot/singlePlot/utils.ts"],"sourcesContent":["import {\r\n  PlotDataProps,\r\n  TripleProps,\r\n  QueryProps,\r\n  ParamsForApiProps,\r\n} from '../../../../containers/display/interfaces';\r\nimport cleanDeep from 'clean-deep';\r\n\r\nimport { LeftSideState } from '../../../../contexts/leftSideContext';\r\nimport { RightSideState } from '../../../../contexts/rightSideContext';\r\nimport { formTriples } from '../../../viewDetailsMenu/utils';\r\nimport {\r\n  changeRouter,\r\n  getChangedQueryParams,\r\n} from '../../../../containers/display/utils';\r\n\r\nexport const removePlotFromSelectedPlots = (\r\n  plotsQuery: string | undefined,\r\n  plotName: PlotDataProps\r\n) => {\r\n  const plotsWithDirs = plotsQuery ? plotsQuery.split('&') : [];\r\n  const fileterdPlotsAndDirs = plotsWithDirs.map((plotWithDir: string) => {\r\n    const plotAndDir = plotWithDir.split('/');\r\n    if (plotAndDir[plotAndDir.length - 1] !== plotName.name) {\r\n      return plotWithDir;\r\n    }\r\n  });\r\n  const cleanedFileterdPlotsAndDirs = cleanDeep(fileterdPlotsAndDirs);\r\n  const plotsForQuery = cleanedFileterdPlotsAndDirs.join('&');\r\n  return plotsForQuery;\r\n};\r\n\r\nexport const addToSelectedPlots = (\r\n  plotsQuery: string | undefined,\r\n  plot: PlotDataProps\r\n) => `${plotsQuery ? plotsQuery + '&' : ''}${plot.path}/${plot.name}`;\r\n\r\nexport const addOverlayData = (triples: TripleProps[] | undefined) => {\r\n  const params =\r\n    triples &&\r\n    triples.map(\r\n      (triple: TripleProps) =>\r\n        `${triple.run_number}${triple.dataset_name}/${\r\n          triple.label ? triple.label : triple.run_number\r\n        }`\r\n    );\r\n  const query = params?.join('&');\r\n  return query;\r\n};\r\n\r\nexport const FormatParamsForAPI = (\r\n  globalState: LeftSideState & RightSideState,\r\n  query: QueryProps,\r\n  plotName: string,\r\n  path?: string\r\n): ParamsForApiProps => {\r\n  return {\r\n    run_number: query.run_number ? query.run_number : '',\r\n    dataset_name: query.dataset_name ? query.dataset_name : '',\r\n    folders_path: path,\r\n    plot_name: plotName,\r\n    height: globalState.size.h,\r\n    width: globalState.size.w,\r\n    customizeProps: globalState.customizeProps,\r\n    stats: globalState.stats,\r\n    overlay: query.overlay,\r\n    overlay_plot: query.overlay_data ? formTriples(query.overlay_data) : [],\r\n    normalize: query.normalize ? query.normalize : 'False',\r\n    lumi: query.lumi === '-1' ? '' : query.lumi,\r\n\r\n  };\r\n};\r\n\r\nexport const addPlotToRightSide = (query: QueryProps, plot: PlotDataProps) =>\r\n  changeRouter(\r\n    getChangedQueryParams(\r\n      {\r\n        selected_plots: `${addToSelectedPlots(query.selected_plots, plot)}`,\r\n      },\r\n      query\r\n    )\r\n  );\r\n\r\nexport const removePlotFromRightSide = (\r\n  query: QueryProps,\r\n  plot: PlotDataProps\r\n) =>\r\n  changeRouter(\r\n    getChangedQueryParams(\r\n      {\r\n        selected_plots: `${removePlotFromSelectedPlots(\r\n          query.selected_plots,\r\n          plot\r\n        )}`,\r\n      },\r\n      query\r\n    )\r\n  );\r\n\r\nexport const scroll = (imageRef: any) => {\r\n  if (imageRef) {\r\n    imageRef.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n      inline: 'center',\r\n    });\r\n  }\r\n};\r\n\r\nexport const scrollToBottom = (imageRef: any) => {\r\n  if (imageRef && imageRef.current) {\r\n    imageRef.current.scrollTop = imageRef.current.scrollHeight;\r\n  }\r\n};\r\n"],"mappings":";;;;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAKA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAKA;AACA;AAGA;AAAA;AAKA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAEA;AAAA;AAIA;AADA;AAHA;AAUA;AAAA;AAOA;AADA;AANA;AAgBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}