{"version":3,"file":"static/webpack/static/development/pages/index.js.ca323a654223761bb3bb.hot-update.js","sources":["webpack:///./components/plots/zoomedPlots/zoomedPlots/zoomedJSROOTPlot.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nimport { get_jroot_plot } from '../../../../config/config';\nimport {\n  ParamsForApiProps,\n  PlotDataProps,\n  QueryProps,\n} from '../../../../containers/display/interfaces';\nimport { useRequest } from '../../../../hooks/useRequest';\nimport {\n  StyledCol,\n  StyledPlotRow,\n  PlotNameCol,\n  MinusIcon,\n  Column,\n  ImageDiv,\n} from '../../../../containers/display/styledComponents';\nimport { removePlotFromRightSide } from '../../plot/singlePlot/utils';\nimport { Button } from 'antd';\n\ninterface ZoomedJSROOTPlotsProps {\n  selected_plot: PlotDataProps;\n  params_for_api: ParamsForApiProps;\n}\n\n\nconst drawJSROOT = async (plot_name: string, data: any) => {\n  //in order to get new JSROOT plot, first of all we need to clean div with old plot\n  //@ts-ignore\n  await JSROOT.cleanup(`${plot_name}`);\n  //after cleanup we can draw a new plot\n  //@ts-ignore\n  JSROOT.draw(`${plot_name}`, JSROOT.parse(JSON.stringify(data)), 'hist');\n}\n\n\nexport const ZoomedJSROOTPlot = ({\n  selected_plot,\n  params_for_api,\n}: ZoomedJSROOTPlotsProps) => {\n  const router = useRouter();\n  const query: QueryProps = router.query;\n\n  const { data } = useRequest(get_jroot_plot(params_for_api), {}, [\n    selected_plot.name,\n    params_for_api.lumi\n  ]);\n\n  useEffect(() => {\n    if (!!document.getElementById(selected_plot.name)) {\n      //@ts-ignore\n      drawJSROOT(selected_plot.name, data)\n    }\n  }, [data, params_for_api.lumi]);\n\n  return (\n    <StyledCol space={2}>\n      <StyledPlotRow\n        minheight={params_for_api.height}\n        width={params_for_api.width}\n        is_plot_selected={true.toString()}\n        nopointer={true.toString()}\n      >\n        <PlotNameCol>{selected_plot.name}</PlotNameCol>\n        <Column>\n          <Button\n            type=\"link\"\n            onClick={() => removePlotFromRightSide(query, selected_plot)}\n            icon={<MinusIcon />}\n          />\n        </Column>\n        <ImageDiv\n          id={selected_plot.name}\n          width={params_for_api.width}\n          height={params_for_api.height}\n        />\n      </StyledPlotRow>\n    </StyledCol>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAMA;AACA;AAQA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAGA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}